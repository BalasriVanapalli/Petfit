{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\843712\\\\my-app\\\\Toggle.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      toggle: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, React.createElement(Switch, {\n        trackColor: {\n          false: 'gray',\n          true: 'teal'\n        },\n        thumbColor: \"white\",\n        ios_backgroundColor: \"gray\",\n        onValueChange: function onValueChange(value) {\n          return _this2.setState({\n            toggle: value\n          });\n        },\n        value: this.state.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#2c3e50'\n  }\n});","map":{"version":3,"sources":["C:/Users/843712/my-app/Toggle.js"],"names":["React","Component","App","props","state","toggle","styles","container","false","true","value","setState","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;IAGqBC,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAFiB;AAKlB;;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,UAAU,EAAE;AAACC,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,IAAI,EAAE;AAAtB,SADd;AAEE,QAAA,UAAU,EAAC,OAFb;AAGE,QAAA,mBAAmB,EAAC,MAHtB;AAIE,QAAA,aAAa,EAAE,uBAACC,KAAD;AAAA,iBAAW,MAAI,CAACC,QAAL,CAAc;AAACN,YAAAA,MAAM,EAAEK;AAAT,WAAd,CAAX;AAAA,SAJjB;AAKE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,MALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAWD;;;;EApB8BJ,S;;SAAZC,G;AAuBrB,IAAMI,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,eAAe,EAAE;AAJR;AADoB,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {View, Switch, StyleSheet} from 'react-native';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toggle: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Switch\r\n          trackColor={{false: 'gray', true: 'teal'}}\r\n          thumbColor=\"white\"\r\n          ios_backgroundColor=\"gray\"\r\n          onValueChange={(value) => this.setState({toggle: value})}\r\n          value={this.state.toggle}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#2c3e50',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}