{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\843712\\\\my-app\\\\PetScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar PetScreen = function (_Component) {\n  _inherits(PetScreen, _Component);\n\n  var _super = _createSuper(PetScreen);\n\n  function PetScreen() {\n    var _this;\n\n    _classCallCheck(this, PetScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: ''\n    };\n\n    _this.componentDidMount = function () {\n      fetch('https://jsonblob.com/api/d5d1c918-1b49-11eb-9893-dffe65966cab', {\n        method: 'GET'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        _this.setState({\n          data: responseJson\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PetScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          backgroundColor: 'grey',\n          padding: '30px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 10\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: '200px',\n          height: '100px',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        source: {\n          uri: this.state.data.image\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 2\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, \"Pet Name : \", this.state.data.petName), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, \"Pet Age : \", this.state.data.petAge), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, \"Pet Location :  \", this.state.data.petLocation), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, \"Pet Breed :  \", this.state.data.petBreed), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 12\n        }\n      }, \"Owner Details : \", this.state.data.OwnerDetails), React.createElement(TextInput, {\n        style: {\n          padding: 20,\n          height: 100,\n          margin: 10,\n          borderWidth: 1,\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 10\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 10\n        }\n      }, React.createElement(Button, {\n        color: \"black\",\n        title: \"Call to Owner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 46\n        }\n      }), \" \\xA0\\xA0\\xA0\", React.createElement(Button, {\n        color: \"black\",\n        title: \"Delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 1\n        }\n      })));\n    }\n  }]);\n\n  return PetScreen;\n}(Component);\n\nexport { PetScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    color: 'red'\n  }\n});","map":{"version":3,"sources":["C:/Users/843712/my-app/PetScreen.js"],"names":["React","Component","PetScreen","state","data","componentDidMount","fetch","method","then","response","json","responseJson","console","log","setState","catch","error","backgroundColor","padding","width","height","alignItems","justifyContent","uri","image","petName","petAge","petLocation","petBreed","OwnerDetails","margin","borderWidth","flexDirection","styles","StyleSheet","create","container","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, Text, Image,StyleSheet,TextInput,Button} from 'react-native'\r\n//import { Button } from 'react-native-elements';\r\n export default class PetScreen extends Component {\r\n   state = {\r\n      data: ''\r\n   }\r\n\r\n   componentDidMount = () => {\r\n    fetch('https://jsonblob.com/api/d5d1c918-1b49-11eb-9893-dffe65966cab',  {\r\n         method: 'GET'\r\n      })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n         console.log(responseJson);\r\n         this.setState({\r\n            data: responseJson\r\n         })\r\n      })\r\n      .catch((error) => {\r\n         console.error(error);\r\n      });\r\n   }\r\n   render() {\r\n      return (\r\n         <View style={{backgroundColor:'grey',padding:'30px'}}>\r\n <Image \r\n          style={{ width: '200px', height: '100px' ,alignItems:'center',justifyContent:'center'}}\r\n          source={{uri:this.state.data.image}}\r\n        />\r\n            <Text>\r\n             Pet Name : {this.state.data.petName}\r\n            </Text>\r\n            <Text>\r\n              Pet Age : {this.state.data.petAge}\r\n            </Text>\r\n            <Text>\r\n             Pet Location :  {this.state.data.petLocation}\r\n            </Text>\r\n            <Text>\r\n             Pet Breed :  {this.state.data.petBreed}\r\n            </Text>\r\n           <Text>Owner Details : {this.state.data.OwnerDetails}</Text>\r\n         <TextInput style={{\r\n            padding:20,\r\n            height:100,\r\n            margin:10,\r\n            borderWidth:1,\r\n            backgroundColor:'#fff'\r\n         }}>\r\n          \r\n         </TextInput>\r\n         <View style={{flexDirection:\"row\"}}><Button color='black' \r\n  title=\"Call to Owner\"\r\n/> &nbsp;&nbsp;&nbsp;\r\n<Button color=\"black\" title=\"Delete\"></Button></View>\r\n         </View>\r\n      )\r\n   }\r\n}\r\n\r\n//export default PetScreen\r\nconst styles = StyleSheet.create({\r\n   container: {\r\n    // flex: 1,\r\n    // backgroundColor: '#fff',\r\n     //backgroundColor: 'green',\r\n     color:'red',\r\n     //alignItems: 'center',\r\n    // justifyContent: 'center',\r\n   }})"]},"metadata":{},"sourceType":"module"}