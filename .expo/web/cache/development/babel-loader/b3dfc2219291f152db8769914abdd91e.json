{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\843712\\\\my-app\\\\Screen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\n\nvar Screen = function (_Component) {\n  _inherits(Screen, _Component);\n\n  var _super = _createSuper(Screen);\n\n  function Screen() {\n    var _this;\n\n    _classCallCheck(this, Screen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: ''\n    };\n\n    _this.componentDidMount = function () {\n      fetch('https://jsonblob.com/api/5044b307-1cc0-11eb-ab21-5f0484023a41', {\n        method: 'GET'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        _this.setState({\n          data: responseJson\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Screen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          backgroundColor: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 10\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 150,\n          height: 100\n        },\n        source: {\n          uri: this.state.data.images\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 2\n        }\n      }), \"\\xA0\\xA0\", React.createElement(View, {\n        style: {\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, \"Pet Name:\", this.state.data.petname), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, \"Pet Age: \", this.state.data.petage), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, \"Pet Location:\", this.state.data.petlocation), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, \"Pet Breed:\", this.state.data.petbreed))), \"\\xA0\", React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          backgroundColor: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 150,\n          height: 100\n        },\n        source: {\n          uri: this.state.data.images1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 2\n        }\n      }), \"\\xA0\\xA0\", React.createElement(View, {\n        style: {\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, \"Pet Name:\", this.state.data.petname1), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, \"Pet Age: \", this.state.data.petage1), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, \"Pet Location:\", this.state.data.petlocation1), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, \"Pet Breed:\", this.state.data.petbreed1))), \"\\xA0\", React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          backgroundColor: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 150,\n          height: 100\n        },\n        source: {\n          uri: this.state.data.images2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 2\n        }\n      }), \"\\xA0\\xA0\", React.createElement(View, {\n        style: {\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, \"Pet Name:\", this.state.data.petname2), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, \"Pet Age: \", this.state.data.petage2), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, \"Pet Location:\", this.state.data.petlocation2), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, \"Pet Breed:\", this.state.data.petbreed2))));\n    }\n  }]);\n\n  return Screen;\n}(Component);\n\nexport default Screen;","map":{"version":3,"sources":["C:/Users/843712/my-app/Screen.js"],"names":["React","Component","Screen","state","data","componentDidMount","fetch","method","then","response","json","responseJson","console","log","setState","catch","error","flexDirection","backgroundColor","width","height","uri","images","petname","petage","petlocation","petbreed","images1","petname1","petage1","petlocation1","petbreed1","images2","petname2","petage2","petlocation2","petbreed2"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, Text, Image } from 'react-native'\r\n \r\nclass Screen extends Component {\r\n   state = {\r\n      data: ''\r\n   }\r\n   componentDidMount = () => {\r\n    fetch('https://jsonblob.com/api/5044b307-1cc0-11eb-ab21-5f0484023a41',  {\r\n         method: 'GET'\r\n      })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n         console.log(responseJson);\r\n         this.setState({\r\n            data: responseJson\r\n         })\r\n      })\r\n      .catch((error) => {\r\n         console.error(error);\r\n      });\r\n   }\r\n   render() {\r\n      return (\r\n          <View>\r\n         <View style={{flexDirection:\"row\",backgroundColor:'grey'}}>\r\n <Image \r\n          style={{ width: 150, height: 100 }}\r\n          source={{uri:this.state.data.images}}\r\n        />&nbsp;&nbsp;\r\n        <View style={{flexDirection:\"column\"}}>\r\n            <Text>\r\n               Pet Name:{this.state.data.petname}\r\n            </Text>\r\n            <Text>\r\n              Pet Age: {this.state.data.petage}\r\n            </Text>\r\n            <Text>\r\n               Pet Location:{this.state.data.petlocation}\r\n            </Text>\r\n            <Text>\r\n               Pet Breed:{this.state.data.petbreed}\r\n            </Text>\r\n            </View>\r\n            </View>&nbsp;\r\n            <View style={{flexDirection:\"row\",backgroundColor:'grey'}}>\r\n <Image \r\n          style={{ width: 150, height: 100 }}\r\n          source={{uri:this.state.data.images1}}\r\n        />&nbsp;&nbsp;\r\n        <View style={{flexDirection:\"column\"}}>\r\n            <Text>\r\n               Pet Name:{this.state.data.petname1}\r\n            </Text>\r\n            <Text>\r\n              Pet Age: {this.state.data.petage1}\r\n            </Text>\r\n            <Text>\r\n               Pet Location:{this.state.data.petlocation1}\r\n            </Text>\r\n            <Text>\r\n               Pet Breed:{this.state.data.petbreed1}\r\n            </Text>\r\n            </View>\r\n            </View>&nbsp;\r\n            <View style={{flexDirection:\"row\",backgroundColor:'grey'}}>\r\n <Image \r\n          style={{ width: 150, height: 100 }}\r\n          source={{uri:this.state.data.images2}}\r\n        />&nbsp;&nbsp;\r\n        <View style={{flexDirection:\"column\"}}>\r\n            <Text>\r\n               Pet Name:{this.state.data.petname2}\r\n            </Text>\r\n            <Text>\r\n              Pet Age: {this.state.data.petage2}\r\n            </Text>\r\n            <Text>\r\n               Pet Location:{this.state.data.petlocation2}\r\n            </Text>\r\n            <Text>\r\n               Pet Breed:{this.state.data.petbreed2}\r\n            </Text>\r\n            </View>\r\n            </View>\r\n         </View>\r\n      )\r\n   }\r\n}\r\nexport default Screen"]},"metadata":{},"sourceType":"module"}