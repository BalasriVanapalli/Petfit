{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\843712\\\\my-app\\\\Form.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nvar Form = function (_Component) {\n  _inherits(Form, _Component);\n\n  var _super = _createSuper(Form);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function () {\n      alert(\"Login Successfully.\");\n    };\n\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 1\n        }\n      }, React.createElement(View, {\n        style: styles.inputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 1\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputs,\n        placeholder: \"Enter email\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 1\n        }\n      })), React.createElement(View, {\n        style: styles.inputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 1\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputs,\n        placeholder: \"Enter password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 1\n        }\n      })), React.createElement(TouchableHighlight, {\n        style: [styles.buttonContainer, styles.Button],\n        onPress: function onPress() {\n          return _this2.handleChange();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 1\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 1\n        }\n      }, \"Login\")), React.createElement(Text, {\n        style: styles.buttonContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 1\n        }\n      }, \"New User?\"), React.createElement(TouchableHighlight, {\n        style: [styles.buttonContainer, styles.Button],\n        onPress: function onPress() {\n          return _this2.handleChange('register');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 1\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 1\n        }\n      }, \"Register\")));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport { Form as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'cadetblue',\n    padding: 150\n  },\n  inputContainer: {\n    borderBottomColor: '#F5FCFF',\n    backgroundColor: '#FFFFFF',\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    width: 250,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: '#FFFFFF',\n    flex: 1\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n    width: 250,\n    borderRadius: 30\n  },\n  Button: {\n    backgroundColor: \"#00b5ec\"\n  },\n  buttonText: {\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/843712/my-app/Form.js"],"names":["React","Component","Form","props","handleChange","alert","state","email","password","styles","container","inputContainer","inputs","setState","buttonContainer","Button","buttonText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","padding","borderBottomColor","borderRadius","borderBottomWidth","width","height","marginBottom","flexDirection","marginLeft","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\nStyleSheet,\r\nText,\r\nView,\r\nTextInput,\r\nButton,\r\nTouchableHighlight,\r\nAlert\r\n} from 'react-native';\r\nexport default class Form extends Component {\r\nconstructor(props) {\r\nsuper(props);\r\nthis.state = {\r\nemail: '',\r\npassword: '',\r\n }\r\n }\r\nhandleChange = () => {\r\nalert(\"Login Successfully.\");\r\n }\r\nrender() {\r\nreturn (\r\n<View style={styles.container}>\r\n<View style={styles.inputContainer}>\r\n<TextInput style={styles.inputs}\r\nplaceholder=\"Enter email\"\r\nkeyboardType=\"email-address\"\r\n// underlineColorAndroid='transparent'\r\nonChangeText={(email) => this.setState({ email })} />\r\n</View>\r\n<View style={styles.inputContainer}>\r\n<TextInput style={styles.inputs}\r\nplaceholder=\"Enter password\"\r\nsecureTextEntry={true}\r\n// underlineColorAndroid='transparent'\r\nonChangeText={(password) => this.setState({ password })} />\r\n</View>\r\n<TouchableHighlight style={[styles.buttonContainer, styles.Button]} onPress={() => this.handleChange()}>\r\n<Text style={styles.buttonText}>Login</Text>\r\n</TouchableHighlight>\r\n<Text style={styles.buttonContainer}>New User?</Text>\r\n<TouchableHighlight style={[styles.buttonContainer, styles.Button]} onPress={() => this.handleChange('register')}>\r\n<Text style={styles.buttonText}>Register</Text>\r\n</TouchableHighlight>\r\n</View>\r\n );\r\n }\r\n}\r\nconst styles = StyleSheet.create({\r\ncontainer: {\r\nflex: 1,\r\njustifyContent: 'center',\r\nalignItems: 'center',\r\nbackgroundColor: 'cadetblue',\r\npadding: 150\r\n },\r\n \r\ninputContainer: {\r\nborderBottomColor: '#F5FCFF',\r\nbackgroundColor: '#FFFFFF',\r\nborderRadius: 30,\r\nborderBottomWidth: 1,\r\nwidth: 250,\r\nheight: 45,\r\nmarginBottom: 20,\r\nflexDirection: 'row',\r\nalignItems: 'center'\r\n },\r\ninputs: {\r\nheight: 45,\r\nmarginLeft: 16,\r\nborderBottomColor: '#FFFFFF',\r\nflex: 1,\r\n },\r\nbuttonContainer: {\r\nheight: 45,\r\nflexDirection: 'row',\r\njustifyContent: 'center',\r\nalignItems: 'center',\r\nmarginBottom: 20,\r\nwidth: 250,\r\nborderRadius: 30,\r\n },\r\nButton: {\r\nbackgroundColor: \"#00b5ec\",\r\n },\r\nbuttonText: {\r\ncolor: 'white',\r\n }\r\n});"]},"metadata":{},"sourceType":"module"}