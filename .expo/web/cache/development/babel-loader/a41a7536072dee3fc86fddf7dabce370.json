{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\843712\\\\my-app\\\\PetfitDetails.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar PetfitDetails = function PetfitDetails() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    fetch('https://jsonblob.com/api/0d1cca4e-1b56-11eb-9893-13f2d53c2bf9').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json.pets);\n    });\n  }, []);\n  return React.createElement(ScrollView, {\n    style: {\n      width: '97%',\n      marginLeft: 7\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, data.map(function (info, index) {\n    return React.createElement(View, {\n      key: index,\n      style: styles.datapart,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: {\n        width: 100,\n        height: 100\n      },\n      source: {\n        uri: info.images\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 10\n      }\n    }), React.createElement(View, {\n      style: {\n        flexDirection: 'column',\n        marginLeft: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.textpart,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, \"Pet Name: \", info.petname), React.createElement(Text, {\n      style: styles.textpart,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"Pet Age: \", info.petage), React.createElement(Text, {\n      style: styles.textpart,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"Pet Location: \", info.petlocation), React.createElement(Text, {\n      style: styles.textpart,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Pet Breed: \", info.petbreed)));\n  }));\n};\n\nexport default PetfitDetails;\nvar styles = StyleSheet.create({\n  datapart: {\n    backgroundColor: '#a9a9a9',\n    flexDirection: 'row',\n    padding: 15,\n    marginTop: 9,\n    height: 130\n  },\n  textpart: {\n    fontSize: 19,\n    fontWeight: 400,\n    fontFamily: 'Calibri'\n  }\n});","map":{"version":3,"sources":["C:/Users/843712/my-app/PetfitDetails.js"],"names":["React","useEffect","useState","PetfitDetails","data","setData","fetch","then","response","json","pets","width","marginLeft","map","info","index","styles","datapart","height","uri","images","flexDirection","textpart","petname","petage","petlocation","petbreed","StyleSheet","create","backgroundColor","padding","marginTop","fontSize","fontWeight","fontFamily"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GACtB;AAAA,kBAC0BD,QAAQ,CAAC,EAAD,CADlC;AAAA;AAAA,MACSE,IADT;AAAA,MACeC,OADf;;AAKEJ,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,KAAK,CAAC,+DAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACE,IAAD;AAAA,aAAUJ,OAAO,CAACI,IAAI,CAACC,IAAN,CAAjB;AAAA,KAFR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAQA,SACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC,KAAP;AAAaC,MAAAA,UAAU,EAAC;AAAxB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCR,IAAI,CAACS,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;AAAA,WACR,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,KAAK,EAAEC,MAAM,CAACC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,KAAD;AACC,MAAA,KAAK,EAAE;AAAEN,QAAAA,KAAK,EAAE,GAAT;AAAcO,QAAAA,MAAM,EAAE;AAAtB,OADR;AAEC,MAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAACL,IAAI,CAACM;AAAV,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAKE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAa,EAAC,QAAhB;AAAyBT,QAAAA,UAAU,EAAC;AAApC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEI,MAAM,CAACM,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACcR,IAAI,CAACS,OADnB,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,MAAM,CAACM,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACYR,IAAI,CAACU,MADjB,CAJJ,EAOI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAER,MAAM,CAACM,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACkBR,IAAI,CAACW,WADvB,CAPJ,EAUI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAET,MAAM,CAACM,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACeR,IAAI,CAACY,QADpB,CAVJ,CALF,CADQ;AAAA,GAAT,CADD,CADF;AAgCD,CA9CD;;AAkDA,eAAevB,aAAf;AACA,IAAMa,MAAM,GAACW,UAAU,CAACC,MAAX,CAAkB;AAC3BX,EAAAA,QAAQ,EAAC;AACLY,IAAAA,eAAe,EAAC,SADX;AAELR,IAAAA,aAAa,EAAC,KAFT;AAGLS,IAAAA,OAAO,EAAC,EAHH;AAILC,IAAAA,SAAS,EAAC,CAJL;AAKLb,IAAAA,MAAM,EAAC;AALF,GADkB;AAQ3BI,EAAAA,QAAQ,EAAC;AACLU,IAAAA,QAAQ,EAAC,EADJ;AAELC,IAAAA,UAAU,EAAC,GAFN;AAGLC,IAAAA,UAAU,EAAC;AAHN;AARkB,CAAlB,CAAb","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Text, View,ScrollView,Image ,StyleSheet} from 'react-native';\r\n\r\nconst PetfitDetails = () =>\r\n{\r\n  const [data, setData] = useState([]);\r\n \r\n \r\n \r\n  useEffect(() => {\r\n    fetch('https://jsonblob.com/api/0d1cca4e-1b56-11eb-9893-13f2d53c2bf9')\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json.pets))\r\n  }, []);\r\n \r\n \r\n \r\n  return (\r\n    <ScrollView style={{width:'97%',marginLeft:7}}>\r\n    {data.map((info, index) => (\r\n      <View key={index} style={styles.datapart}>\r\n         <Image \r\n          style={{ width: 100, height: 100 }}\r\n          source={{uri:info.images}}\r\n        />\r\n        <View style={{ flexDirection:'column',marginLeft:20,}}>\r\n            <Text style={styles.textpart}>\r\n               Pet Name: {info.petname}\r\n            </Text>\r\n            <Text style={styles.textpart}>\r\n              Pet Age: {info.petage}\r\n            </Text>\r\n            <Text style={styles.textpart}>\r\n               Pet Location: {info.petlocation}\r\n            </Text>\r\n            <Text style={styles.textpart}>\r\n               Pet Breed: {info.petbreed}\r\n            </Text>\r\n            </View>\r\n      </View>\r\n    ))}\r\n \r\n \r\n \r\n  </ScrollView> \r\n \r\n \r\n \r\n  );\r\n}\r\n \r\n \r\n \r\nexport default PetfitDetails;\r\nconst styles=StyleSheet.create({\r\n    datapart:{\r\n        backgroundColor:'#a9a9a9',\r\n        flexDirection:'row',\r\n        padding:15,\r\n        marginTop:9,\r\n        height:130\r\n    },\r\n    textpart:{\r\n        fontSize:19,\r\n        fontWeight:400,\r\n        fontFamily:'Calibri'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}